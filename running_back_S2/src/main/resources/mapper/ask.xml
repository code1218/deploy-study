<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.korit.running_back_s2.domain.ask.AskMapper">

    <resultMap id="AskMap" type="com.korit.running_back_s2.domain.ask.Ask">
        <id     property="askId"        column="ask_id"/>
        <result property="userId"       column="a_user_id"/>
        <result property="title"        column="title"/>
        <result property="content"      column="ask_content"/>
        <result property="createdAt"    column="ask_created_at"/>
        <result property="isAnswer"     column="is_answer"/>
        <association property="user" resultMap="UserMap" columnPrefix="u_"/>
        <association property="answer" resultMap="AnswerMap" columnPrefix="an_"/>
    </resultMap>

    <resultMap id="UserMap" type="com.korit.running_back_s2.domain.user.User">
        <id     property="userId"    column="user_id"/>
        <result property="fullName"  column="full_name" />
        <result property="nickname"  column="nickname"/>
    </resultMap>
    <resultMap id="AnswerMap" type="com.korit.running_back_s2.domain.ask.Answer">
        <id     property="answerId"   column="answer_id"/>
        <result property="askId"      column="ask_id"/>
        <result property="userId"     column="user_id"/>
        <result property="content"    column="content"/>
        <result property="createdAt"  column="created_at"/>
        <association property="user" resultMap="UserMap" columnPrefix="u_"/>
    </resultMap>

    <update id="updateIsAnswer">
        update ask_tb
        set is_answer = 1
        where ask_id = #{askId}
    </update>

    <select id="findAllAskBySearchOption"
            parameterType="com.korit.running_back_s2.domain.ask.AskFreeSearchOption"
            resultMap="AskMap">
        SELECT
        a.ask_id            AS ask_id,
        a.user_id           AS a_user_id,
        a.title             AS title,
        a.content           AS ask_content,      -- ✅ AskMap의 content 매핑
        a.created_at        AS ask_created_at,   -- ✅ AskMap의 createdAt 매핑
        a.is_answer         AS is_answer,

        u.user_id           AS u_user_id,
        u.full_name         AS u_full_name,      -- ✅ fullName 표시용
        u.nickname          AS u_nickname

        FROM ask_tb a
        LEFT JOIN user_tb u ON (u.user_id = a.user_id)

        <where>
            <if test="searchText != null and searchText != ''">
                (
                a.title    LIKE CONCAT('%', #{searchText}, '%')
                OR a.content   LIKE CONCAT('%', #{searchText}, '%')
                OR u.nickname  LIKE CONCAT('%', #{searchText}, '%')
                OR u.full_name LIKE CONCAT('%', #{searchText}, '%')  <!-- 원하면 추가 -->
                )
            </if>
        </where>

        ORDER BY a.ask_id DESC
        LIMIT #{startIndex}, #{size}
    </select>

    <select id="countListsBySearchOption"
            parameterType="com.korit.running_back_s2.domain.ask.AskFreeSearchOption"
            resultType="int">
        SELECT COUNT(*)
        FROM ask_tb a
        LEFT JOIN user_tb u ON (u.user_id = a.user_id)

        <where>
            <if test="searchText != null and searchText != ''">
                (
                a.title   LIKE CONCAT('%', #{searchText}, '%')
                OR a.content LIKE CONCAT('%', #{searchText}, '%')
                OR u.nickname LIKE CONCAT('%', #{searchText}, '%')
                )
            </if>
        </where>
    </select>

    <insert id="insert" keyProperty="askId" useGeneratedKeys="true">
        insert into ask_tb
        (user_id, title, content)
        values (#{userId}, #{title}, #{content})
    </insert>

    <insert id="insertAnswer">
        insert into answer_tb
        (ask_id, user_id, content)
        values (#{askId}, #{userId}, #{content})
    </insert>

    <select id="findDetailById" resultMap="AskMap">
        SELECT
            a.ask_id                               AS ask_id,
            a.user_id                              AS a_user_id,
            a.title                                AS title,
            a.content                              AS ask_content,
            a.created_at                           AS ask_created_at,
            a.is_answer                            AS is_answer,

            u.user_id                               AS u_user_id,
            u.full_name                             As u_full_name,
            u.nickname                              AS u_nickname,

            an.answer_id                            AS an_answer_id,
            an.ask_id                               AS an_ask_id,
            an.user_id                              AS an_user_id,
            an.content                              AS an_content,
            an.created_at                           AS an_created_at
        FROM ask_tb a
            LEFT JOIN user_tb   u  ON u.user_id = a.user_id
            LEFT JOIN answer_tb an ON an.ask_id = a.ask_id
        WHERE a.ask_id = #{askId}
        ORDER BY an.created_at DESC
        LIMIT 1
    </select>
</mapper>
